---
import { type CollectionEntry, getCollection } from "astro:content";
import blog from "@layouts/Blog.astro";
import PostDetails from "@layouts/BlogDetails.astro";
import getsortedblog from "@utils/getSortedBlogblog";
import getPageNumbers from "@utils/getBlogPageNumbers";
import getPagination from "@utils/getBlogPagination";

export interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blog = await getCollection("blog", ({ data }) => !data.draft);

  const postResult = blog.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));

  const pagePaths = getPageNumbers(blog.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { post } = Astro.props;

const blog = await getCollection("blog");

const sortedblog = getsortedblog(blog);

const pagination = getPagination({
  blog: sortedblog,
  page: slug,
});
---

{post ? <PostDetails post={post} /> : <blog {...pagination} />}
